name: 'Continuous Integration Pipeline'

on:
  push:
    branches:    
      - 'master' # Push events on master branch
      - 'cboesch' # Push events to branches matching refs/heads/cboesch
      - 'mbouron' # Push events to branches matching refs/heads/mbouron
      - 'releases/*' # Push events to branches matching refs/heads/releases/*
  pull_request: 
    branches:    
      - 'master' # Pull request events on master branch
      - 'cboesch' # Pull request events to branches matching refs/heads/cboesch
      - 'mbouron' # Pull request events to branches matching refs/heads/mbouron
      - 'releases/*' # Pull request events to branches matching refs/heads/releases/*
  schedule:
     - cron:  '0 0 * * *' # Every day at midnight
   
jobs:
  build_libs:

    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v1

    - name: Install ubuntu libs
      run: sudo apt-get install nasm libx264-dev wget pkg-config libglfw3-dev python-pip python2.7-dev python-virtualenv

    - name: ffmpeg installation
      run: |
        export PREFIX=/usr
        export PKG_CONFIG_PATH=$PREFIX/lib/pkgconfig
        wget -q https://ffmpeg.org/releases/ffmpeg-4.2.1.tar.bz2
        tar -xf ffmpeg-4.2.1.tar.bz2
        cd ffmpeg-4.2.1
        ./configure --enable-debug --disable-stripping --disable-doc \
        --disable-autodetect --enable-zlib --disable-everything \
        --enable-filter='aformat,aresample,asetnsamples,asettb,copy,format,fps,hflip,settb,scale,transpose,vflip' \
        --disable-programs --enable-avdevice --enable-swscale --enable-swresample \
        --enable-bsf='aac_adtstoasc,h264_mp4toannexb' \
        --enable-demuxer='aac,image_jpeg_pipe,image_pgm_pipe,image_png_pipe,rawvideo,mp3,mp4,mov,wav,flac,matroska,mpegts' \
        --enable-decoder='mjpeg,png,rawvideo,mp3,pcm_s16le,pcm_s16be,mpeg4,aac,pgm,flac,webp,wmv1,wmv2,wmv3,h264' \
        --enable-parser='mjpeg,png,h264,aac,flac' \
        --enable-muxer=mp4,matroska \
        --enable-encoder=libx264 \
        --enable-protocol='file,http' --enable-shared --disable-static --prefix=$PREFIX
        sudo make -j8
        sudo make install        

    - name: Build node.gl
      run: |
        export PREFIX=/usr
        export PKG_CONFIG_PATH=$PREFIX/lib/pkgconfig
        sudo make

    - name: Run tests
      run: |
        export PREFIX=/usr
        export PKG_CONFIG_PATH=$PREFIX/lib/pkgconfig
        sudo make tests
